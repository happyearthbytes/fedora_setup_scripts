#!/usr/bin/env bash

CHART_MAIN_DIR=
CHART_CHART_DIR=
CHART_BASE_DIR=
CHART_NAME=
INSTANCE_NAME=
NAMESPACE=
CHART_URL=

generate_sh() {
cat <<EOF > ${CHART_MAIN_DIR}/generate.sh
#!/usr/bin/env bash
# NOTE: This file is automatically generated!
# TODO: currently this needs to be run from the project directory
CHART_SELECTOR=${CHART_SELECTOR}
CHART_NAME=${CHART_NAME}
CHART_URL=${CHART_URL}
INSTANCE_NAME=${INSTANCE_NAME}
cd ..
./scripts/get_helm.sh \\
  \${CHART_SELECTOR} \\
  \${CHART_NAME} \\
  \${CHART_URL} \\
  \${INSTANCE_NAME}
EOF
chmod +x ${CHART_MAIN_DIR}/generate.sh
echo "NOTE: To continue: cd ${CHART_MAIN_DIR}; ./generate.sh"
}
create_main_directory() {
    if [ ! -d ${CHART_MAIN_DIR} ]; then
        mkdir -p ${CHART_MAIN_DIR}
        generate_sh       
        exit 1
    fi
}
add_repo() {
    local found=$(helm repo list | grep ${CHART_URL})
    if [ "$found" == "" ]; then
        helm repo add ${CHART_NAME} ${CHART_URL}
    fi
}
create_chart_directory() {
    mkdir -p ${CHART_CHART_DIR}
}
create_base_directory() {
    mkdir -p ${CHART_BASE_DIR}
}
download_chart() {
    if [ ! -d ${CHART_CHART_DIR}/${CHART_NAME} ]; then
        helm fetch --untar \
        --untardir ${CHART_CHART_DIR} \
        ${CHART_SELECTOR}/${CHART_NAME}
    fi
}
create_template() {
    if [ ! -f ${CHART_MAIN_DIR}/values.yaml ]; then
        cp ${CHART_CHART_PROJ}/values.yaml ${CHART_MAIN_DIR}/
        echo "NOTE: Customize values.yaml"
        echo "NOTE: To continue: ./generate.sh"
        exit 1
    fi
    helm template \
      --generate-name \
      --output-dir ${CHART_BASE_DIR} \
      --values ${CHART_MAIN_DIR}/values.yaml \
      --wait \
      ${CHART_SELECTOR}/${CHART_NAME}
    #   --namespace ${NAMESPACE} \

    mv ${CHART_BASE_PROJ}/templates/* ${CHART_BASE_PROJ} && rm -rf ${CHART_BASE_PROJ}/templates
}
kustomization_yaml()
{
cat <<EOF > ${CHART_BASE_PROJ}/kustomization.yaml
############################################################################### 
#
#         !!!!!!!!!!! WARNING !!!!!!!!!!!
#
#         This file is automatically generated
#         and must be manually modified
#         before applying the kustomization.
#
#         Remove this message after it has been modified
#
############################################################################### 

namespace: <TODO>
commonLabels: <TODO>
roles: <TODO>
resources:
— <TODO>.yaml
— <TODO>.yaml
EOF
echo "IMPORTANT: Modify ${CHART_BASE_PROJ}/kustomization.yaml"
}
start_sh() {
cat <<EOF > ${CHART_MAIN_DIR}/start.sh
#!/usr/bin/env bash
# NOTE: This file is automatically generated!
# TODO: Currently needs to be run from the project dir
kubectl apply -f base/${CHART_NAME}
EOF
chmod +x ${CHART_MAIN_DIR}/start.sh
echo "NOTE: To start: cd ${CHART_MAIN_DIR}; ./start.sh"
}
stop_sh() {
cat <<EOF > ${CHART_MAIN_DIR}/stop.sh
#!/usr/bin/env bash
# NOTE: This file is automatically generated!
# TODO: Currently needs to be run from the project dir
kubectl delete -f base/${CHART_NAME}
EOF
chmod +x ${CHART_MAIN_DIR}/stop.sh
echo "NOTE: To stop: cd ${CHART_MAIN_DIR}; ./stop.sh"
}
create_kustomization() {
    if [ ! -f ${CHART_BASE_PROJ}/kustomization.yaml ]; then
        kustomization_yaml
        start_sh
        stop_sh
        exit 1
    fi
}
main() {
    # Assign Variables
    CHART_SELECTOR=$1
    CHART_NAME=$2
    CHART_URL=$3
    INSTANCE_NAME=$4
    # NAMESPACE=$5
    CHART_MAIN_DIR=${CHART_NAME}
    CHART_CHART_DIR=${CHART_MAIN_DIR}/charts
    CHART_BASE_DIR=${CHART_MAIN_DIR}/base
    CHART_CHART_PROJ=${CHART_CHART_DIR}/${CHART_NAME}
    CHART_BASE_PROJ=${CHART_BASE_DIR}/${CHART_NAME}
    
    # Run the functions
    create_main_directory
    add_repo
    create_chart_directory
    download_chart
    create_base_directory
    create_template
    create_kustomization
}

main "$@"